{"version":3,"sources":["config/SerwisAPI.js","functions/auth.js","pages/Login.js","functions/equipment.js","pages/Preview.js","pages/Adding.js","pages/Edit.js","pages/Logged.js","App.js","index.js"],"names":["API_URL","window","location","href","login","email","password","cb","a","options","method","headers","body","JSON","stringify","fetch","res","status","json","localStorage","setItem","user","name","lastName","token","console","log","register","result","code","logout","getItem","removeItem","Login","state","error","registratrion","loading","handlerLogin","e","preventDefault","Auth","loginCb","setState","props","setStateHandler","logged","handlerRegister","registerCb","this","className","onSubmit","htmlFor","id","type","onChange","target","value","autoComplete","required","onClick","Component","create","fields","getAll","update","equipment","delete","equipmentId","Previwe","fetching","equipments","search","componentDidMount","Equipment","getAllCb","Array","isArray","handleDelete","confirm","reload","filter","data","toLowerCase","includes","map","key","f","fKey","_id","edit","placeholder","adding","Adding","handlerAdding","createCb","array","splice","prevState","Edit","equipmentName","equipmentFields","handlerEdit","saveCb","Logged","deleting","logoutCb","mainElement","Preview","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fe50b581.chunk.js","sourcesContent":["const API_URL = window.location.href\r\n//'http://localhost:3001'\r\n//'https://ksiazka-serisowa-backend.herokuapp.com/'\r\n//'http://serwis-sprzetu.xaa.pl:3001'\r\nexport {\r\n    API_URL,\r\n}","import { API_URL } from '../config/SerwisAPI'\r\n\r\nclass Auth {\r\n\r\n    login = async (email, password, cb) => {\r\n        const options = {\r\n            method: 'post',\r\n            headers: {\r\n                'Accept': 'application/json, text/plain, */*',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ email, password })\r\n        }\r\n\r\n        try {\r\n            let res = await fetch(`${API_URL}user/login`, options)\r\n\r\n            if (res.status === 200) {\r\n                res = await res.json()\r\n                localStorage.setItem('authenticated', true)\r\n                localStorage.setItem('userName', res.user.name)\r\n                localStorage.setItem('userLastName', res.user.lastName)\r\n                localStorage.setItem('token', res.token)\r\n                cb()\r\n            } else {\r\n                cb(400)\r\n            }\r\n        } catch (e) {\r\n            console.log(e)\r\n            cb('Błąd serwera')\r\n        }\r\n    }\r\n\r\n    register = async (name, lastName, email, password, cb) => {\r\n        try {\r\n            const res = await fetch(`${API_URL}user`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ name, lastName, email, password })\r\n            })\r\n            const result = await res.json()\r\n            if (result.code && result.code === 11000) {\r\n                cb(11000)\r\n            } else if (res.status === 201) {\r\n                localStorage.setItem('authenticated', true)\r\n                localStorage.setItem('userName', result.user.name)\r\n                localStorage.setItem('userLastName', result.user.lastName)\r\n                localStorage.setItem('token', result.token)\r\n                cb()\r\n            } else {\r\n                cb(400)\r\n            }\r\n        } catch {\r\n            cb('Błąd serwera')\r\n        }\r\n    }\r\n\r\n    logout = async (cb) => {\r\n        try {\r\n            await fetch(`${API_URL}user/logout`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n                }\r\n            })\r\n            localStorage.removeItem('authenticated')\r\n            localStorage.removeItem('userName')\r\n            localStorage.removeItem('userLastName')\r\n            localStorage.removeItem('token')\r\n            cb()\r\n        } catch {\r\n            cb('Błąd serwera')\r\n        }\r\n    }\r\n\r\n    isAuthenticated() {\r\n        return localStorage.getItem('authenticated')\r\n    }\r\n}\r\n\r\nexport default new Auth()","import React, { Component } from 'react'\r\n\r\nimport Auth from '../functions/auth'\r\n\r\nclass Login extends Component {\r\n\r\n    state = {\r\n        email: null,\r\n        password: null,\r\n        name: null,\r\n        lastName: null,\r\n        error: null,\r\n        registratrion: false,\r\n        loading: null,\r\n    }\r\n\r\n    handlerLogin = (e) => {\r\n        e.preventDefault()\r\n        Auth.login(this.state.email, this.state.password, this.loginCb)\r\n        this.setState({ loading: <h3>Przetwarzanie...</h3> })\r\n    }\r\n\r\n    loginCb = (e) => {\r\n        if (!e) {\r\n            this.props.setStateHandler({ logged: true })\r\n        } else if (e === 400) {\r\n            this.setState({ error: <h3>Złe dane!</h3>, loading: null })\r\n        } else {\r\n            this.setState({ error: <h3>Problem z serwerem, zgłoś do admina.</h3>, loading: null })\r\n        }\r\n    }\r\n\r\n    handlerRegister = (e) => {\r\n        e.preventDefault()\r\n        Auth.register(this.state.name, this.state.lastName, this.state.email, this.state.password, this.registerCb)\r\n        this.setState({ loading: <h3>Przetwarzanie...</h3> })\r\n    }\r\n\r\n    registerCb = (e) => {\r\n        if (!e) {\r\n            this.props.setStateHandler({ logged: true })\r\n        } else if (e === 11000) {\r\n            this.setState({ error: <h3>Istnieje już konto na podanym emailu.</h3>, loading: null })\r\n        } else if (e === 400) {\r\n            this.setState({ error: <h3>Złe dane!</h3>, loading: null })\r\n        } else {\r\n            this.setState({ error: <h3>Problem z serwerem, zgłoś do admina.</h3>, loading: null })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.registratrion) {\r\n            return (\r\n                <div className='page'>\r\n                    <form className='regForm' onSubmit={(e) => { this.handlerRegister(e) }}>\r\n                        <h2 className='regForm__title'>Rejestracja</h2>\r\n                        <label className='regForm__label' htmlFor='nameInput'>Imię</label>\r\n                        <input className='regForm__input' id='nameInput' type='text' onChange={(e) => { this.setState({ name: e.target.value }) }} autoComplete='given-name' required />\r\n                        <label className='regForm__label' htmlFor='lastNameInput'>Nazwisko</label>\r\n                        <input className='regForm__input' id='lastNameInput' type='text' onChange={(e) => { this.setState({ lastName: e.target.value }) }} autoComplete='family-name' required />\r\n                        <label className='regForm__label' htmlFor='emailInput'>Email</label>\r\n                        <input className='regForm__input' id='emailInput' type='text' onChange={(e) => { this.setState({ email: e.target.value }) }} autoComplete='email' required />\r\n                        <label className='regForm__label' htmlFor='passwordInput'>Hasło</label>\r\n                        <input className='regForm__input' id='passwordInput' type='password' onChange={(e) => { this.setState({ password: e.target.value }) }} autoComplete='new-password' required />\r\n                        {this.state.loading}\r\n                        {this.state.error}\r\n                        <input className='regForm__submit' type='submit' value='Zarejestruj' />\r\n                        <p className='regForm__p'>Masz już konto ?</p>\r\n                        <button className='regForm__button' onClick={() => this.setState({ registratrion: false })} >Logowanie</button>\r\n                    </form>\r\n                    <footer className='footer'>\r\n                        Kontakt: ksiazka-serwisowa@gmail.com | ©2020\r\n                    </footer>\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <div className='page'>\r\n                <form className='loginForm' onSubmit={(e) => { this.handlerLogin(e) }}>\r\n                    <h2 className='loginForm__title'>Logowanie</h2>\r\n                    <label className='loginForm__label' htmlFor='emailInput'>Email</label>\r\n                    <input className='loginForm__input' id='emailInput' type='text' onChange={(e) => { this.setState({ email: e.target.value }) }} autoComplete='email' required />\r\n                    <label className='loginForm__label' htmlFor='passwordInput'>Hasło</label>\r\n                    <input className='loginForm__input' id='passwordInput' type='password' onChange={(e) => { this.setState({ password: e.target.value }) }} autoComplete='current-password' required />\r\n                    {this.state.loading}\r\n                    {this.state.error}\r\n                    <input className='loginForm__submit' type='submit' value='Zaloguj' />\r\n                    <p className='loginForm__p'>Zarejestruj się za darmo.</p>\r\n                    <button className='loginForm__button' onClick={() => this.setState({ registratrion: true })} >Rejestracja</button>\r\n                </form>\r\n                <footer className='footer'>\r\n                    Kontakt: ksiazka-serwisowa@gmail.com | ©2020\r\n                </footer>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Login","import { API_URL } from '../config/SerwisAPI'\r\n\r\nclass Equipment {\r\n    create = async (name, fields, cb) => {\r\n        const options = {\r\n            method: 'post',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n            },\r\n            body: JSON.stringify({ name, fields })\r\n        }\r\n        try {\r\n            const res = await fetch(`${API_URL}equipment`, options)\r\n            if (res.status === 201) {\r\n                cb()\r\n            } else {\r\n                cb('Błąd serwera')\r\n            }\r\n        } catch (e) {\r\n            cb('Błąd serwera')\r\n        }\r\n    }\r\n    getAll = async (cb) => {\r\n        const options = {\r\n            method: 'get',\r\n            headers: {\r\n                'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n            }\r\n        }\r\n        try {\r\n            const res = await fetch(`${API_URL}equipment`, options)\r\n            if (res.status === 200) {\r\n                const result = await res.json()\r\n                cb(result)\r\n            } else {\r\n                cb('Błąd serwera')\r\n            }\r\n        } catch (e) {\r\n            cb('Błąd serwera')\r\n        }\r\n\r\n    }\r\n\r\n    update = async (equipment, cb) => {\r\n        const options = {\r\n            method: 'PATCH',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n            },\r\n            body: JSON.stringify(equipment),\r\n        }\r\n        try {\r\n            const res = await fetch(`${API_URL}equipment`, options)\r\n            if (res.status === 200) {\r\n                cb()\r\n            }\r\n            else {\r\n                cb('Błąd serwera')\r\n            }\r\n        } catch (e) {\r\n            cb('Błąd serwera')\r\n        }\r\n    }\r\n\r\n    delete = async (equipmentId, cb) => {\r\n        const options = {\r\n            method: 'delete',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n            },\r\n            body: JSON.stringify({ equipmentId }),\r\n        }\r\n        try {\r\n            const res = await fetch(`${API_URL}equipment`, options)\r\n            if (res.status === 200) {\r\n                cb()\r\n            } else if (res.status === 404) {\r\n                cb(404)\r\n            } else {\r\n                cb('Błąd serwera')\r\n            }\r\n        } catch (e) {\r\n            cb('Błąd serwera')\r\n        }\r\n    }\r\n}\r\n\r\nexport default new Equipment()","import React, { Component } from 'react'\r\n\r\nimport Equipment from '../functions/equipment'\r\n\r\nclass Previwe extends Component {\r\n\r\n\r\n    state = {\r\n        fetching: (<h3>Ładowanie</h3>),\r\n        error: null,\r\n        equipments: null,\r\n        search: null,\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        Equipment.getAll(this.getAllCb)\r\n    }\r\n\r\n    getAllCb = (e) => {\r\n        if (Array.isArray(e)) {\r\n            this.setState({ fetching: null, equipments: e })\r\n        } else {\r\n            this.setState({ fetching: null, error: e })\r\n        }\r\n    }\r\n\r\n\r\n    handleDelete = (id) => {\r\n        let confirm = window.confirm('Napewno chcesz usunąć element ?')\r\n        if (confirm) {\r\n            Equipment.delete(id, (e) => {\r\n                if (!e) {\r\n                    window.location.reload(false)\r\n                } else {\r\n                    this.props.setStateHandler({ error: (<h3>Ups... Coś poszło nie tak!</h3>) })\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const equipments = this.state.equipments ? this.state.equipments.filter((data)=>{\r\n            if(this.state.search == null){\r\n                return data\r\n            }\r\n            else if(data.name.toLowerCase().includes(this.state.search.toLowerCase())){\r\n                return data\r\n            }\r\n            return null    \r\n        }).map((e, key) => {\r\n            return (\r\n                <section className='preview__elementContainer' key={key}>\r\n                    <h2 className='previwe__elementName'>\r\n                        {e.name}\r\n                    </h2>\r\n                    {e.fields ? e.fields.map((f, fKey) => {\r\n                        return (<aside className='preview__fieldContainer' key={fKey}>\r\n                            <header className='preview__fieldName'>{f.name}</header>\r\n                            <p className='preview__fieldValue'>{f.value}</p>\r\n                        </aside>)\r\n                    }) : null}\r\n                    <div className='preview__elementButtonsConainer'>\r\n                        <button className='preview__elementDeleteButton' onClick={() => { this.handleDelete(e._id) }}>Usuń</button>\r\n                        <button className='preview__elementEditButton' onClick={() => { this.props.setStateHandler({ edit: e }) }}>Edytuj</button>\r\n                    </div>\r\n                </section>\r\n            )\r\n        }) \r\n        : \r\n        null\r\n        return (\r\n            <main className='preview'>\r\n                <section className='preview__searchAndAdd'>\r\n                    <input className='preview__searchInput' onChange={(e)=>{this.setState({search: e.target.value})}} autoComplete='off' placeholder='Wyszukiwarka'/>\r\n                    <button className='preview__addButton' onClick={() => { this.props.setStateHandler({ adding: true }) }}>Dodaj nowy</button>\r\n                </section>\r\n                <section className='preview__content'>\r\n                    {this.state.fetching}\r\n                    {this.state.error}\r\n                    {equipments}\r\n                </section>\r\n            </main>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Previwe","import React, { Component } from 'react'\r\n\r\nimport Equipment from '../functions/equipment'\r\n\r\nclass Adding extends Component {\r\n    state = {\r\n        name: null,\r\n        fields: [],\r\n        loading: false,\r\n        error: null,\r\n    }\r\n\r\n    handlerAdding = (e) => {\r\n        e.preventDefault()\r\n    Equipment.create(this.state.name, this.state.fields, this.createCb)\r\n        this.setState({ loading: <h3>Przetwarzanie...</h3> })\r\n    }\r\n\r\n    createCb = (e) => {\r\n        if (!e) {\r\n            this.props.setStateHandler({ adding: false })\r\n        } else {\r\n            this.setState({ loading: null, error: 'Ups... coś poszło nie tak!' })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state)\r\n        return (\r\n            <main className='adding'>\r\n                <header className='adding__title'>\r\n                    <h3 className='adding__titleText'>Dodawanie nowego sprzętu</h3>\r\n                </header>\r\n                <button className='adding__canelButton' onClick={() => { this.props.setStateHandler({ adding: false }) }}>Anuluj</button>\r\n                <form className='adding__form' onSubmit={(e) => { this.handlerAdding(e) }}>\r\n                    <label className='adding__label' >Nazwa</label>\r\n                    <input className='adding__input' type='text' onChange={(e) => { this.setState({ name: e.target.value }) }} required />\r\n                    <h4 className='adding__fieldsTitle' >Rubryki na dane: </h4>\r\n                    {this.state.fields ? this.state.fields.map((e, key) => {\r\n                        return (<div className='adding__fieldsContainer' key={key}>\r\n                            <label className='adding__label'>Nazwa rubruki: </label>\r\n                            <input className='adding__input' type='text' onChange={(e) => { let fields = [...this.state.fields]; fields[key].name = e.target.value; this.setState({ fields }) }} required />\r\n                            <label className='adding__label' >Dane: </label>\r\n                            <textarea className='adding__textarea' placeholder='Wprowadź zawartość pola (opcjonalne)...' type='text' onChange={(e) => { let fields = [...this.state.fields]; fields[key].value = e.target.value; this.setState({ fields }) }} />\r\n                            <button className='adding__deleteFieldButton' type=\"button\" onClick={() => { let array = [...this.state.fields]; array.splice(key, 1); this.setState({ fields: array }) }}>Usuń rubrykę</button>\r\n                        </div>)\r\n                    }) : null}\r\n                    <button className='adding__addFieldButton' type=\"button\" onClick={() => { this.setState((prevState) => ({ fields: [...prevState.fields, { name: null, value: null }] })) }}>Dodaj rubrykę</button>\r\n                    {this.state.loading}\r\n                    {this.state.error}\r\n                    <input className='adding__submit' type='submit' value='Utwórz' />\r\n                </form>\r\n            </main >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Adding","import React, { Component } from 'react'\r\n\r\nimport Equipment from '../functions/equipment'\r\n\r\n\r\nclass Edit extends Component {\r\n\r\n    state = {\r\n        equipmentName: this.props.equipment.name,\r\n        equipmentFields: this.props.equipment.fields,\r\n        error: null,\r\n    }\r\n\r\n    handlerEdit = (e) => {\r\n        e.preventDefault()\r\n        Equipment.update({ equipmentId: this.props.equipment._id, name: this.state.equipmentName, fields: this.state.equipmentFields }, this.saveCb)\r\n        this.setState({ loading: <h3>Przetwarzanie...</h3> })\r\n    }\r\n\r\n    saveCb = (e) => {\r\n        if (!e) {\r\n            this.props.setStateHandler({ edit: false })\r\n        } else {\r\n            this.setState({ loading: null, error: 'Ups... coś poszło nie tak!' })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const fields = this.state.equipmentFields ? this.state.equipmentFields.map((f, fKey) => {\r\n            return (<span className='edit__fieldsContainer' key={fKey}>\r\n                <label className='edit__label'>Nazwa rubryki</label>\r\n                <input className='edit__input' type='text' value={f.name} onChange={(e) => { let fields = [...this.state.equipmentFields]; fields[fKey].name = e.target.value; this.setState({ equipmentFields: fields }) }} required />\r\n                <label className='edit__label' >Dane rubryki</label>\r\n                <textarea className='edit__textarea' value={f.value} onChange={(e) => { let fields = [...this.state.equipmentFields]; fields[fKey].value = e.target.value; this.setState({ equipmentFields: fields }) }} />\r\n                <button className='adding__deleteFieldButton' type=\"button\" onClick={() => { let fields = [...this.state.equipmentFields]; fields.splice(fKey, 1); this.setState({ equipmentFields: fields }) }}>Usuń rubrykę</button>\r\n            </span>)\r\n        }) : null\r\n        return (\r\n            <main className='edit'>\r\n                <header className='edit__titleContainer'>\r\n                    <h3 className='edit__titleText'>\r\n                        Edytowanie: {this.state.equipmentName}\r\n                        <button className='edit__canelButton' onClick={() => { this.props.setStateHandler({ edit: false }) }}>Anuluj</button>\r\n                    </h3>\r\n                </header>\r\n                <form className='edit__form' onSubmit={(e) => { this.handlerEdit(e) }} >\r\n                    <label className='edit__label'>Nazwa</label>\r\n                    <input className='edit__input' type='text' value={this.state.equipmentName} onChange={(e) => { this.setState({ equipmentName: e.target.value }) }} />\r\n                    {fields}\r\n                    <button className='edit__addFieldButton' type=\"button\" onClick={() => { this.setState((prevState) => ({ equipmentFields: [...prevState.equipmentFields, { name: '', value: '' }] })) }}>Dodaj rubrykę</button>\r\n                    <input className='edit__submit' type='submit' value='Zapisz' />\r\n                </form>\r\n            </main>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Edit","import React, { Component } from 'react'\r\n\r\nimport Preview from './Preview'\r\nimport Adding from './Adding'\r\nimport Edit from './Edit'\r\n\r\nimport Auth from '../functions/auth'\r\n\r\nclass Logged extends Component {\r\n    state = {\r\n        edit: false,\r\n        adding: false,\r\n        fetching: true,\r\n        equipment: null,\r\n        error: null,\r\n        deleting: null,\r\n    }\r\n\r\n    setStateHandler = (value) => {\r\n        this.setState(value)\r\n    }\r\n\r\n    logoutCb = (e) => {\r\n        if (!e) {\r\n            this.props.setStateHandler({ logged: false })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let mainElement = null\r\n        if (this.state.adding) {\r\n            mainElement = <Adding setStateHandler={this.setStateHandler} />\r\n        } else if (this.state.edit) {\r\n            mainElement = <Edit setStateHandler={this.setStateHandler} equipment={this.state.edit} />\r\n        } else {\r\n            mainElement = <Preview setStateHandler={this.setStateHandler} />\r\n        }\r\n        return (\r\n            <div>\r\n                <header className='topBar'><h2 className='topBar__h2'>Książka Serwisowa</h2><button className='topBar__button' onClick={() => { Auth.logout(this.logoutCb) }}>Wyloguj</button></header>\r\n                {mainElement}\r\n                <footer className='footer'>\r\n                    Kontakt: email@ex.com | © 2020\r\n                </footer>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Logged","import React, { Component } from 'react';\nimport Login from './pages/Login'\nimport Logged from './pages/Logged'\n\nclass App extends Component {\n\n  state = {\n    logged: localStorage.getItem('authenticated'),\n  }\n\n  setStateHandler = (value) => {\n    this.setState(value)\n  }\n\n  render() {\n    if (this.state.logged) {\n      return (\n        <Logged setStateHandler={this.setStateHandler} />\n      )\n    }\n    return (\n      <Login setStateHandler={this.setStateHandler} />\n    )\n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}